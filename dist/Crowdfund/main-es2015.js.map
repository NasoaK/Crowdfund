{"version":3,"sources":["./src/app/projects-list/projects-list.component.html","./src/app/projects-list/projects-list.component.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/project-details/reward-modal/reward-modal.component.ts","./src/app/project-details/reward-modal/reward-modal.component.html","./src/app/project-details/project-details.component.html","./src/app/project-details/project-details.component.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/services/project-list.service.ts","./src/app/services/all-projects.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAYA,yEAAgE;IAC9D,yEAAkB;IAChB,oEAAyD;IACzD,wEAAuB;IAAA,uDAAkB;IAAA,4DAAK;IAC9C,uEAA8C;IAC5C,uDACF;IAAA,4DAAI;IACN,4DAAM;IACR,4DAAM;;;IANG,0DAAyB;IAAzB,yJAAyB;IACP,0DAAkB;IAAlB,gFAAkB;IAEvC,0DACF;IADE,8FACF;;ACPG,MAAM,qBAAqB;IA2DhC,YACU,kBAAsC,EACtC,cAAkC;QADlC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,mBAAc,GAAd,cAAc,CAAoB;QA5DrC,UAAK,GAAG,iBAAiB,CAAC;QAE1B,cAAS,GAAe;YAC5B;gBACC,EAAE,EAAE,CAAC;gBACP,IAAI,EAAE,kCAAkC;gBACxC,YAAY,EAAE,wEAAwE;gBACtF,YAAY,EAAE,KAAK;gBACnB,IAAI,EAAE,sCAAsC;gBAC5C,KAAK,EAAE,wCAAwC;gBAC/C,IAAI,EAAE,MAAM;gBACZ,YAAY,EAAE,IAAI;gBAClB,aAAa,EAAE,YAAY;gBAC3B,WAAW,EAAE,YAAY;gBACzB,MAAM,EAAC,mJAAmJ;gBAC1J,KAAK,EAAE,qeAAqe;gBAC5e,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,EAAE;wBACV,QAAQ,EAAE,GAAG;wBACb,WAAW,EAAE,8JAA8J;wBAC3K,IAAI,EAAC,KAAK;qBACX;oBACD;wBACE,IAAI,EAAE,qBAAqB;wBAC3B,MAAM,EAAE,EAAE;wBACV,QAAQ,EAAE,EAAE;wBACZ,WAAW,EAAE,qEAAqE;wBAClF,IAAI,EAAC,KAAK;qBACX;oBACD;wBACE,IAAI,EAAE,2BAA2B;wBACjC,MAAM,EAAE,GAAG;wBACX,QAAQ,EAAE,GAAG;wBACb,WAAW,EAAE,8JAA8J;wBAC3K,IAAI,EAAC,KAAK;qBACX;iBACF;aACA;SACF,CAAC;QAUK,qBAAgB,GAAe,EAAE,CAAC;QAEjC,mBAAc,GAAG,EAAE,CAAC;QA8CnB,aAAQ,GAAe,IAAI,CAAC,SAAS,CAAC;QAI/C,WAAM,GAAW,CAAC,CAAC;IAzChB,CAAC;IAEJ,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,IAAI,aAAa,CAAC,MAAc;QAC9B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;QAE7B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa;YACxC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC;YACzC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;IACpB,CAAC;IAEO,cAAc,CAAC,QAAgB;QACrC,QAAQ,GAAG,QAAQ,CAAC,iBAAiB,EAAE,CAAC;QAExC,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAC9B,CAAC,OAAiB,EAAE,EAAE,CACpB,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAC1D,CAAC;QACF,OAAO,GAAG,CAAC;IACb,CAAC;IAEM,gBAAgB;QACrB,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACnC,CAAC;IAGM,oBAAoB,CAAC,OAAe;QACzC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;IAChC,CAAC;IAEI,cAAc;QACnB,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;IAC7C,CAAC;IASC,QAAQ;QACV,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEnC;;;;;;;oCAO4B;IAC7B,CAAC;;0FArHU,qBAAqB;qGAArB,qBAAqB;QDXlC,oEAAG;QAAA,wEAAa;QAAA,4DAAI;QAEpB,uDACA;QAAA,2EAAsE;QAA9B,gMAA2B;QAAnE,4DAAsE;QAStE,iHAQM;QACN,gEACA;;QApBA,0DACA;QADA,sFACA;QAAwC,0DAA2B;QAA3B,sFAA2B;QASxB,0DAAmB;QAAnB,yFAAmB;;;;;;;;;;;;;;;;;;AELvD,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,oEAES;;;;;;;;;;;;;;ACFT;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;ACD5D,MAAM,oBAAoB;IAM/B,YAAoB,KAAqB,EACjC,YAAiC;QADrB,UAAK,GAAL,KAAK,CAAgB;QACjC,iBAAY,GAAZ,YAAY,CAAqB;QAJlC,YAAO,GAAuB,EAAE,CAAC;QACjC,WAAM,GAAuB,EAAE,CAAC;IAGM,CAAC;IAG9C,QAAQ;QAER,MAAM,IAAI,GAAU,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC9D,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAI,IAAI,CAAC,CAAC;QAChC;;;cAGM;IACJ,CAAC;;wFAlBU,oBAAoB;oGAApB,oBAAoB;QCbjC,yEAAoB;QAEhB,yEAAuB;QACrB,8DAAgE;QAAhE,yEAAgE;QAAA,qEAAgM;QAAA,4DAAO;QACvQ,+DAAI;QAAJ,qEAAI;QAAA,4EAAiB;QAAA,4DAAK;QAE1B,uEAAmB;QACjB,8IAEF;QAAA,4DAAI;QAEJ,yEAA2B;QACzB,sEAAmE;QACnE,sEAAI;QAAA,kFAAsB;QAAA,4DAAK;QAC/B,qEAAG;QACD,wDAIF;QAAA,4DAAI;QACN,4DAAM;QAEN,0EAAgC;QAG9B,0EAA4B;QAC1B,uEAAoE;QAEpE,0EAA8B;QAC5B,yEAA+B;QAAA,wDAAiB;QAAA,4DAAK;QACrD,yEAAkB;QAAA,oEAAQ;QAA6B,mEAAO;QAAA,4DAAI;QACpE,4DAAM;QAEN,qEAAG;QAAA,wDAAwB;QAAA,4DAAI;QAE/B,2EAAqB;QACnB,yEAA8B;QAC5B,yEAEC;QACD,kEACF;QAAA,4DAAI;QACJ,2EAAmC;QACjC,qEAAG;QAAA,6EAAiB;QAAA,4DAAI;QACxB,uEAAK;QACH,2EAAuB;QACrB,qEAAG;QAAA,6DAAC;QAAA,4DAAI;QACR,wEAAqB;QACvB,4DAAM;QACN,8EAA2B;QAAA,oEAAQ;QAAA,4DAAS;QAC9C,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAzCE,2DAIF;QAJE,wPAIF;QAUmC,0DAAiB;QAAjB,gFAAiB;QAI/C,0DAAwB;QAAxB,uFAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICX7B,+DAAqJ;IAArJ,wEAAqJ;IAAA,uDAAkB;IAAA,4DAAI;;;IAA9H,6JAA4C;IAA4D,0DAAkB;IAAlB,sFAAkB;;;;IA2C3K,0EAAiE;IAE/D,0EAAmB;IACjB,0EAAwB;IACtB,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,wEAAkB;IAAA,uDAAmC;IAAA,4DAAI;IAC3D,4DAAM;IACN,wEAA8B;IAAA,uDAAwB;IAAA,4DAAI;IAE1D,0EAAqB;IACnB,yEAAsB;IACpB,4EAA0B;IAAC,wDAAqB;IAAA,4DAAO;IAAC,kEAC1D;IAAA,4DAAI;IACJ,6EAAsD;IAA3B,sWAA0B;IAAC,yEAAa;IAAA,4DAAS;IAC9E,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAZI,0DAAiB;IAAjB,+EAAiB;IACH,0DAAmC;IAAnC,0GAAmC;IAEzB,0DAAwB;IAAxB,sFAAwB;IAIvB,0DAAqB;IAArB,6FAAqB;;;IA4BxB,qEAAyD;;;;IAO/E,0EAAsE;IACpE,oEAAG;IAAA,4EAAqB;IAAA,qEAAI;IAAA,4EAAiB;IAAA,4DAAK;IAAA,4DAAQ;IAAA,4DAAI;IAE5D,+EAA2C;IAArC,6ZAAuB;IAC3B,0EAAuB;IACtB,oEAAG;IACD,mEAA4B;IAC/B,4DAAI;IAEF,wEAA4F;IAC9F,4DAAM;IACN,8EAA0C;IAAA,oEAAQ;IAAA,4DAAS;IAC7D,4DAAO;IACX,4DAAM;;;IAJoE,2DAAyB;IAAzB,0FAAyB;;;IAgB3E,qEAAqD;;;;IAY3E,0EAAkE;IAChE,oEAAG;IAAA,4EAAqB;IAAA,qEAAI;IAAA,4EAAiB;IAAA,4DAAK;IAAA,4DAAQ;IAAA,4DAAI;IAC5D,+EAAkD;IAA5C,8gBAA+B;IACnC,0EAAuB;IACrB,oEAAG;IAAA,4DAAC;IAAA,4DAAI;IACR,wEAAuH;;IACzH,4DAAM;IACN,8EAAiE;IAAA,oEAAQ;IAAA,4DAAS;IACpF,4DAAO;IACX,4DAAM;;;;IAJmD,2DAAkC;IAAlC,+JAAkC;IAAC,sFAAyB;IAEtE,0DAAsB;IAAtB,kFAAsB;;;;;IAzBzE,0EAI8E;IAH5E,2XAAgC;IAI9B,0EAA+B;IAC7B,0EAAmB;IAAC,wIAAqD;IAAC,4DAAM;IAChF,0EAA+B;IAC7B,yEAA+B;IAAA,uDAAiB;IAAA,4DAAK;IACrD,wEAAkB;IAAA,uDAAmC;IAAA,4DAAI;IAC3D,4DAAM;IACN,oEAAG;IAAA,wDAAwB;IAAA,4DAAI;IAC/B,2EAAqB;IACnB,yEAA8B;IAC5B,8EAAqD;IAAA,wDAAqB;IAAA,4DAAS;IAAA,gEAAI;IAAA,4DAAI;IAC/F,4DAAM;IACR,4DAAM;IAEN,2IASM;IACV,4DAAM;;;IAxBJ,6KAA2E;IAEvB,0DAAiB;IAAjB,iFAAiB;IAEhC,0DAAiB;IAAjB,gFAAiB;IAC9B,0DAAmC;IAAnC,2GAAmC;IAEpD,0DAAwB;IAAxB,uFAAwB;IAG8B,0DAAqB;IAArB,oFAAqB;IAIjC,0DAAiB;IAAjB,iFAAiB;;;;IAxD1E,sEAAuC;IACrC,8DAA4G;IAA5G,0EAA4G;IAA7C,8UAA2B;IAAkB,sEAAgM;IAAA,4DAAO;IACjT,+DAA6B;IAA7B,yEAA6B;IAAC,6EAAiB;IAAA,4DAAK;IAEpD,wEAAmB;IACjB,8IAEF;IAAA,4DAAI;IAGF,0EAA4L;IAAzG,uUAAyB;IAC1G,0EAA+B;IAC7B,0EAAmB;IAAC,mIAAyD;IAAC,4DAAM;IACpF,2EAA+B;IAC3B,sEAAI;IAAA,kFAAsB;IAAA,4DAAK;IACnC,4DAAM;IACN,qEAAG;IAAA,iNACkF;IAAA,4DAAI;IAC3F,4DAAM;IACN,oIAaM;IACR,4DAAM;IAGR,2EAAgC;IAE9B,qIA4BM;IACR,4DAAM;IACV,4DAAM;;;IA1D4G,0DAA+E;IAA/E,uLAA+E;IAEvI,0DAAqB;IAArB,wFAAqB;IAOxB,0DAAqB;IAArB,wFAAqB;IAqBjD,0DAAkB;IAAlB,2FAAkB;;;;;IA8B7C,sEAAwC;IACtC,8DAAwG;IAAxG,0EAAwG;IAAzC,0UAAuB;IAAkB,sEAAgM;IAAA,4DAAO;IAC7S,+DAAI;IAAJ,qEAAI;IAAA,4EAAiB;IAAA,4DAAK;IAE1B,wEAAmB;IACjB,8IAEF;IAAA,4DAAI;IACJ,0EAAgC;IAE9B,0EAAkG;IAAvE,sUAAwB;IAC/C,0EAA+B;IAC/B,2EAA8B;IAC5B,0EAA+B;IAAA,wDAAyB;IAAA,4DAAK;IAC7D,yEAAkB;IAAA,wDAA2C;IAAA,4DAAI;IACnE,4DAAM;IAEN,qEAAG;IAAA,wDAAgC;IAAA,4DAAI;IAEvC,2EAAqB;IAEnB,yEAA8B;IAC5B,8EAAqD;IACnD,wDAA6B;IAAA,4DAAS;IAAA,gEAAI;IAAA,4DAAI;IAChD,4DAAM;IACR,4DAAM;IAER,2EAAmC;IAEjC,qEAAG;IAAA,sEAAI;IAAA,6EAAiB;IAAA,4DAAK;IAAA,4DAAI;IAE/B,gFAA0D;IAApD,kbAAuC;IAC3C,2EAAuB;IACrB,qEAAI;IAAA,6DAAC;IAAA,4DAAI;IACT,wEAA4H;;IAC9H,4DAAM;IACN,8EAAiE;IAAA,oEAAQ;IAAA,4DAAS;IACpF,4DAAO;IACb,4DAAM;IACR,4DAAM;IACR,4DAAM;IACV,4DAAM;;;;IA/BoD,0DAA4C;IAA5C,gKAA4C;IAG3D,0DAAyB;IAAzB,2FAAyB;IACtC,0DAA2C;IAA3C,sHAA2C;IAG5D,0DAAgC;IAAhC,kGAAgC;IAM7B,0DAA6B;IAA7B,yGAA6B;IAWU,2DAA2C;IAA3C,0KAA2C;IAAC,iGAAiC;IAE3E,0DAAsB;IAAtB,kFAAsB;;;;IAO/E,0EAAiE;IAC7D,8DAAiH;IAAjH,0EAAiH;IAAA,uEAAmC;IAAA,wEAA+C;IAAA,sEAAoE;IAAA,4DAAI;IAAA,4DAAM;IACjR,+DAAiC;IAAjC,yEAAiC;IAAA,oFAAyB;IAAA,4DAAK;IAC/D,wEAAgC;IAAA,uDAAkB;IAAA,4DAAI;IACtD,4EAAqD;IAA1B,wUAAuB;IAAG,oEAAQ;IAAA,4DAAS;IAC1E,4DAAM;;;IAF8B,0DAAkB;IAAlB,sFAAkB;;;IAxH5D,0EAAqC;IACnC,0EAAuB;IAGnB,4HAoEM;IAEN,6HAyCM;IAEN,4HAKM;IACV,4DAAM;IACR,4DAAM;;;IAxHM,0DAA+B;IAA/B,yGAA+B;IAsE/B,0DAAgC;IAAhC,0GAAgC;IA2ChC,0DAAgB;IAAhB,mFAAgB;;;;;AC9LrB,MAAM,uBAAuB;IA2BlC,YACU,KAAqB,EACrB,kBAAsC,EACtC,cAAkC,EAClC,MAAoB;QAHpB,UAAK,GAAL,KAAK,CAAgB;QACrB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,mBAAc,GAAd,cAAc,CAAoB;QAClC,WAAM,GAAN,MAAM,CAAc;QA7BvB,YAAO,GAAuB,EAAE,CAAC;QAIjC,iBAAY,GAAU,KAAK,CAAC;QAmB5B,WAAM,GAAwB,EAAE,CAAC;QA2CjC,eAAU,GAAS,KAAK,CAAC;QAuExB,kBAAa,GAAY,CAAC,CAAC;QAC5B,iBAAY,GAAY,CAAC,CAAE;IA5G/B,CAAC;IAxBG,YAAY;QACnB,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IACvC,CAAC;IAGH;;UAEM;IAEG,cAAc;QACnB,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IACrC,CAAC;IAEM,QAAQ,CAAC,CAAC,EAAC,CAAC;QACjB,OAAO,CAAC,GAAC,CAAC,CAAE;IACd,CAAC;IAeM,YAAY;QACjB,IAAG,IAAI,CAAC,UAAU,EAAC;YACjB,OAAO,YAAY,CAAC;SACrB;aAAI;YACH,OAAO,UAAU,CAAC;SACnB;IACH,CAAC;IAMD,QAAQ;QAEP,MAAM,EAAE,GAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAElF,OAAO,CAAC,GAAG,CAAC,MAAM,GAAC,EAAE,CAAC,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,WAAW,GAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACtC;;;;0EAIkE;IACnE,CAAC;IAaD,SAAS;QACP,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACpC,MAAM,CAAC,IAAI,GAAG,KAAK,CAAE;QACvB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,GAAG,KAAK;IAC9B,CAAC;IAGD,WAAW;QACT,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACnC,CAAC;IACD,eAAe;QACb,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAE;IAC3B,CAAC;IAED,SAAS;QACP,IAAI,CAAC,UAAU,GAAC,CAAC,IAAI,CAAC,UAAU,CAAC;IACnC,CAAC;IAED,QAAQ,CAAC,MAAgB;QACtB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAE;QACzB,IAAI,CAAC,WAAW,EAAE;IACpB,CAAC;IAID,cAAc,CAAC,MAAgB;QAC7B,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,MAAM,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAE;QACzB,MAAM,GAAE,IAAI,CAAC,cAAc,CAAC;IAC9B,CAAC;IAED,aAAa;QACZ,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAE7B,CAAC;IACE,QAAQ,CAAC,IAAY,EAAE,MAAe;QACvC,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAClC,IAAG,GAAG,IAAI,MAAM,CAAC,MAAM,EAAE;YACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YAC5C,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YAC1E,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,MAAM,CAAC,QAAQ,EAAE,CAAC;YAClB,IAAI,CAAC,UAAU,GAAC,KAAK,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,YAAY,EAAG,CAAC;SAC7B;IACH,CAAC;IACC,MAAM,CAAC,IAAY;QACnB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAClC,IAAG,GAAG,IAAE,IAAI,CAAC,aAAa,EAAC;YACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YACvC,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YAC/E,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,UAAU,GAAC,KAAK,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,YAAY,EAAG,CAAC;SAC9B;IAEF,CAAC;;8FA1IS,uBAAuB;uGAAvB,uBAAuB;QDdpC,oEAA+D;QAC/D,0EAAS;QACP,yEAAkB;QAChB,oEAAyD;QAEzD,yEAA2B;QACzB,qEAAI;QAAA,uDAAkB;QAAA,4DAAK;QAC3B,oEAAG;QAAA,uDAA0B;QAAA,4DAAI;QACnC,4DAAM;QAEN,yEAA4C;QAC1C,6EAAuD;QAA5B,gJAAS,qBAAiB,IAAC;QAAC,6EAAiB;QAAA,4DAAS;QACjF,6EAAiD;QAA3B,gJAAS,oBAAgB,IAAC;QAE9C,8DAAqJ;QAArJ,0EAAqJ;QACnJ,wEAAmC;QACjC,wEAAuG;QACvG,uEAA2G;QAC7G,4DAAI;QACN,4DAAM;QAEN,kHAA2K;QAC7K,4DAAS;QACX,4DAAM;QACR,4DAAM;QAGN,+DAAkB;QAAlB,0EAAkB;QAChB,sEAAI;QACF,sEAAI;QACF,2EAA4B;QAAC,wDAAsD;;QAAA,4DAAM;QACxF,qEAAG;QAAC,gEAAG;QAAA,4EAAoD;QAAA,wDAA6B;;QAAA,4DAAO;QAAC,mEAAM;QAAA,4DAAI;QAC7G,4DAAK;QACL,0EAA0B;QACxB,2EAA4B;QAC1B,wDACF;QAAA,4DAAM;QAEN,qEAAG;QAAA,yEAAa;QAAA,4DAAI;QACtB,4DAAK;QACL,sEAAI;QACF,2EAA4B;QAC1B,gEACF;QAAA,4DAAM;QACN,qEAAG;QAAA,qEAAS;QAAA,4DAAI;QAClB,4DAAK;QACP,4DAAK;QAEL,2EAAyB;QACvB,sEAAoH;QACtH,4DAAM;QACR,4DAAM;QAEN,0EAAkB;QAChB,2EAAmB;QACjB,sEAAI;QAAA,8EAAkB;QAAA,4DAAK;QAC3B,iEAAM;QACN,qEAAG;QACD,wDACF;QAAA,4DAAI;QACN,4DAAM;QAIN,uHAgBM;QACR,4DAAM;QACR,4DAAU;QAKV,sHA4HM;;QAnND,0JAAyB;QAGH,0DAAwB;QAAxB,yJAAwB;QAGzC,0DAAkB;QAAlB,iFAAkB;QACnB,0DAA0B;QAA1B,yFAA0B;QAOwD,0DAAiE;QAAjE,2KAAiE;QAElG,0DAAuD;QAAvD,iLAAuD;QAChD,0DAAoD;QAApD,8KAAoD;QAItF,0DAAoB;QAApB,oFAAoB;QASd,0DAAsD;QAAtD,0LAAsD;QACvB,0DAA6B;QAA7B,oJAA6B;QAIvF,0DACF;QADE,oGACF;QAaoB,0DAAsF;QAAtF,yNAAsF;QAS1G,0DACF;QADE,6FACF;QAK0C,0DAAkB;QAAlB,wFAAkB;QAuB9C,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;;;;;;;;;;;;IErF/B,qEAAsB;IACpB,wEAAyE;IAAA,uEAAgD;IAAC,iEAAK;IAAA,4DAAI;IAAA,4DAAK;IACxI,qEAAI;IAAA,uEAAmD;IAAA,mEAAQ;IAAA,4DAAI;IAAA,4DAAK;IACxE,wEAAgF;IAAA,wEAA4C;IAAA,sEAAW;IAAA,4DAAI;IAAA,4DAAK;IAClJ,4DAAK;;;IAGH,8DAAmF;IAAnF,0EAAmF;IAAA,wEAAmC;IAAA,sEAAiD;IAAA,4DAAI;IAAA,4DAAM;;;IACjL,8DAA8F;IAA9F,0EAA8F;IAAA,sEAAoL;IAAA,4DAAM;;;ACHvR,MAAM,YAAY;IAUvB,YAAqB,MAA0B;QAA1B,WAAM,GAAN,MAAM,CAAoB;QAT/C,UAAK,GAAG,WAAW,CAAC;IAS6B,CAAC;IAJlD,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAE;IACpC,CAAC;IAID,QAAQ;QAEN,IAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,EAAC;YAC7C,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;YAC1B,IAAI,CAAC,SAAS,GAAC,KAAK;YAEtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAE;SAC1B;aAAK,IAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,EAAC;YACnD,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;YACzB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAE;SACxB;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAClC,CAAC;;wEAzBU,YAAY;4FAAZ,YAAY;QDTzB,yEAAQ;QACN,yEAA4C;QAC1C,0EAAgB;QAAC,qEAAS;QAAA,4DAAO;QAEjC,uGAIK;QAEL,0EAA2C;QAAvB,kIAAS,gBAAY,IAAC;QACxC,6GAAiL;QACjL,6GAAwR;QAC1R,4DAAO;QAET,4DAAM;QACR,4DAAS;QAET,2EAA+B;;QAjBxB,0DAAsC;QAAtC,yJAAsC;QAGpC,0DAAe;QAAf,+EAAe;QAO8C,0DAAgB;QAAhB,gFAAgB;QAChB,0DAAe;QAAf,+EAAe;;AC2BrF,CAAC;;;;;;;;;;;;;ACtCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACT;AAEO;AACT;AACO;AAC0B;AACM;AAC9B;AACX;AACgD;AACzB;AAEb;;AAchD,MAAM,SAAS;;kEAAT,SAAS;yFAAT,SAAS,cAFR,2DAAY;8FADb,CAAC,kFAAkB,CAAC,YADtB,CAAC,uEAAa,EAAE,oEAAgB,EAAE,qEAAgB,EAAE,0DAAW,EAAC,gEAAY,EAAE,uEAAc,CAAC;oIAI3F,SAAS,mBAXlB,2DAAY;QACZ,kEAAa;QACb,4FAAqB;QACrB,kGAAuB;QACvB,yGAAoB,aAGZ,uEAAa,EAAE,oEAAgB,EAAE,qEAAgB,EAAE,0DAAW,EAAC,gEAAY,EAAE,uEAAc;;;;;;;;;;;;;ACvBvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACG;;;AAO1C,MAAM,kBAAkB;IAG7B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFnB,oBAAe,GAAG,mBAAmB,CAAC;IAEhB,CAAC;IAEjC,WAAW;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CACzD,0DAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC,EACtD,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACJ,CAAC;IAEO,WAAW,CAAC,KAAwB;QAC1C,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACrC,kEAAkE;YAClE,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAC1D;aAAM;YACL,sDAAsD;YACtD,6DAA6D;YAC7D,OAAO,CAAC,KAAK,CACX,yBAAyB,KAAK,CAAC,MAAM,IAAI,GAAG,aAAa,KAAK,CAAC,KAAK,EAAE,CACvE,CAAC;SACH;QACD,yDAAyD;QACzD,OAAO,uDAAU,CAAC,iDAAiD,CAAC,CAAC;IACvE,CAAC;;oFAzBU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;;;;;;;;;;;;;;;;;ACAb,MAAM,kBAAkB;IA0C7B;QAxCF,aAAQ,GAAe;YAEjB;gBACF,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,kCAAkC;gBACxC,YAAY,EAAE,wEAAwE;gBACtF,YAAY,EAAE,KAAK;gBACnB,IAAI,EAAE,sCAAsC;gBAC5C,KAAK,EAAE,wCAAwC;gBAC/C,IAAI,EAAE,MAAM;gBACZ,YAAY,EAAE,IAAI;gBAClB,aAAa,EAAE,YAAY;gBAC3B,WAAW,EAAE,YAAY;gBACzB,MAAM,EAAC,mJAAmJ;gBAC1J,KAAK,EAAE,qeAAqe;gBAC5e,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,EAAE;wBACV,QAAQ,EAAE,GAAG;wBACb,WAAW,EAAE,8JAA8J;wBAC3K,IAAI,EAAC,KAAK;qBACX;oBACD;wBACE,IAAI,EAAE,qBAAqB;wBAC3B,MAAM,EAAE,EAAE;wBACV,QAAQ,EAAE,EAAE;wBACZ,WAAW,EAAE,qEAAqE;wBAClF,IAAI,EAAC,KAAK;qBACX;oBACD;wBACE,IAAI,EAAE,2BAA2B;wBACjC,MAAM,EAAE,GAAG;wBACX,QAAQ,EAAE,GAAG;wBACb,WAAW,EAAE,8JAA8J;wBAC3K,IAAI,EAAC,KAAK;qBACX;iBACF;aACF;SACF;IACiB,CAAC;;oFA1CN,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;;;;;;;;;;;;;ACJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;AACgC;AACN;;;AAGhF,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,4FAAqB,EAAE;IACrD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,kGAAuB,EAAE;IAC3D,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,4FAAqB,EAAE;CACpD,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;AChBuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["<p>project works</p>\n\n{{ title }}\n<input type=\"text\" class=\"form-control\" [(ngModel)]=\"projectFilter\" />\n\n<!-- <input\n  type=\"text\"\n  class=\"form-control\"\n  [ngModel]=\"projectFilter\"\n  (ngModelChange)=\"projectFilter = $event\"\n/>\n -->\n<div class=\"container\" *ngFor=\"let project of filteredProjects\">\n  <div class=\"card\">\n    <img src=\"{{ project.image }}\" alt=\"\" class=\"img-card\" />\n    <h3 class=\"card-title\">{{ project.name }}</h3>\n    <p class=\"card-intro\" routerLink=\"/project/1\">\n      {{ project.rewards }}\n    </p>\n  </div>\n</div>\n]\n","import { Component, Input, OnInit, Output } from \"@angular/core\";\nimport { ProjectListService } from \"../services/project-list.service\";\nimport { AllProjectsService } from \"../services/all-projects.service\";\nimport { IProject } from \"./Project\";\nimport { IRewards } from \"./Rewards\";\n\n@Component({\n  selector: \"app-projects-list\",\n  templateUrl: \"./projects-list.component.html\",\n  styleUrls: [\"./projects-list.component.scss\"],\n})\nexport class ProjectsListComponent implements OnInit {\n  public title = \" liste Projects\";\n\n  public projectos: IProject[] = [\n     {\n      id: 1,\n    name: \"Mastercraft Bamboo Monitor Riser\",\n    introduction: \"A beautiful & handcrafted monitor stand to reduce neck and eye strain \",\n    total_earned: 80000,\n    logo: \"./assets/images/logo-mastercraft.svg\",\n    image: \"./assets/images/image-hero-desktop.jpg\",\n    goal: 100000,\n    total_backer: 5700,\n    project_debut: \"2021-03-05\",\n    project_end: \"2021-05-05\",\n    thanks:\"Your pledge bring us one step closer to sharing Mastercraft Bamboo Monitor Riser worldwide . You will get an email once our campaign is completed\",\n    about: \"The Mastercraft Bamboo Monitor Riser is a sturdy and stylish\\nplatform that elevates your screen to a more comfortable viewing\\nheight. Placing your monitor at eye level has the potential to\\nimprove your posture and make you more comfortable while at work,\\nhelping you stay focused on the task at hand . \\n\\n Featuring artisan craftmanship, the simplicity of design creates extra desk space below your computer to allows notepads, pens, and USB sticks to be stored under the stand.\",\n    rewards: [\n      { \n        name: \"Bamboo\",\n        pledge: 25,\n        quantity: 101,\n        description: \" You get an ergonomic stand made of natural bamboo. You've helped us\\nlaunch our promotional campaign, and you’ll be added to a special\\nBacker member list.\",\n        hide:false\n      },\n      {\n        name: \"Black Edition Stand\",\n        pledge: 75,\n        quantity: 64,\n        description: \"You get a Black Special Edition computer stand and a personal thank\",\n        hide:false\n      },\n      {\n        name: \"Mahogany Special Edition \",\n        pledge: 200,\n        quantity: 100,\n        description: \"   You get two Special Edition Mahogany stands, a Backer T-Shirt, and a personal thank you. You’ll be added to our Backer member list. Shipping is included.\",\n        hide:false\n      }\n    ]\n    },\n  ];\n\n  /*   public projects: IProject[] = []; */\n\n  public showBadge!: boolean;\n\n  public rewardSelected!: boolean;\n\n  public showModal!:boolean;\n\n  public filteredProjects: IProject[] = [];\n\n  private _projectFilter = \"\";\n\n  public receivedRating!: string;\n\n  public errMsg!: string;\n\n  constructor(\n    private projectlistservice: ProjectListService,\n    private projectService: AllProjectsService\n  ) {}\n\n  get projectFilter(): string {\n    return this._projectFilter;\n  }\n\n  set projectFilter(filter: string) {\n    this._projectFilter = filter;\n\n    this.filteredProjects = this.projectFilter\n      ? this.filterProjects(this.projectFilter)\n      : this.projects;\n  }\n\n  private filterProjects(criteria: string): IProject[] {\n    criteria = criteria.toLocaleLowerCase();\n\n    const res = this.projects.filter(\n      (project: IProject) =>\n        project.name.toLocaleLowerCase().indexOf(criteria) > -1\n    );\n    return res;\n  }\n\n  public toggleIsNewBadge(): void {\n    this.showBadge = !this.showBadge;\n  }\n\n\n  public receiveRatingClicked(message: string): void {\n    this.receivedRating = message;\n  }\n\npublic toggleSelected():void{\n  this.rewardSelected = !this.rewardSelected;\n}\n\n    public projects :IProject[] = this.projectos;\n\n\n  @Output()\n  rating: number = 2;\n\n  @Input()\n  ngOnInit(): void {\nthis.filteredProjects = this.projects;\n\n   /*  this.projectlistservice.getProjects().subscribe({\n      next: (projects) => {\n        this.projects = projects;\n        this.filteredProjects = this.projects;\n      },\n      error: (err) => (this.errMsg = err),\n    });\n    this.projectFilter = \"\"; */\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n\n</header>\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport { IProject } from \"../../projects-list/Project\";\nimport { IRewards } from \"../../projects-list/Rewards\";\nimport { ProjectListService } from \"../../services/project-list.service\";\n\n\n\n\n@Component({\n  selector: 'app-reward-modal',\n  templateUrl: './reward-modal.component.html',\n  styleUrls: ['./reward-modal.component.scss']\n})\nexport class RewardModalComponent implements OnInit {\n\n\n  public project: IProject = <IProject>{};\n  public reward :IRewards = <IRewards>{};\n\n  constructor(private route: ActivatedRoute,\n  private proLiService : ProjectListService) { }\n\n\n  ngOnInit(): void {\n    \n  const name:string = this.route.snapshot.paramMap.get('nameR');\n  console.log('name: ' +  name);\n/*   this.proLiService.getProjects().subscribe((projects :IProject[]) => {\n      this.reward = projects.rewards.find((reward) => reward.name === name);\n    });\n    */\n  }\n\n\n}\n","\n<div class=\"modal\" >\n<!--     {{showModal ? 'cacher' : 'bonjour'}} -->\n    <div class=\"modal-box\">\n      <svg width=\"15\" height=\"15\" xmlns=\"http://www.w3.org/2000/svg\" ><path d=\"M11.314 0l2.828 2.828L9.9 7.071l4.243 4.243-2.828 2.828L7.07 9.9l-4.243 4.243L0 11.314 4.242 7.07 0 2.828 2.828 0l4.243 4.242L11.314 0z\" fill=\"#000\" fill-rule=\"evenodd\" opacity=\".4\"/></svg >\n      <h3>Back this project</h3>\n  \n      <p id=\"modal-text\">\n        Want to support us in bringing Mastercraft Bamboo Monitor Riser out in the\n        world?\n      </p>\n  \n      <div class=\"modal-rewards\">\n        <input type=\"radio\" name=\"\" id=\"\" class=\"modal-rewards-checkbox\" />\n        <h3>Pledge with no rewards</h3>\n        <p>\n          {{reward.description }}\n          Choose to support us without a rewards if you simply believe in our\n          project . As a backer, you will be signed up to receive product updates\n          via email\n        </p>\n      </div>\n  \n      <div class=\"modal-rewards-box\" >\n  \n    \n        <div class=\"modal-rewards\" >\n          <input type=\"radio\" name=\"\" id=\"\" class=\"modal-rewards-checkbox\"  />\n  \n          <div class=\"modal-pledge-box\">\n            <h3 style=\"margin-right: 20px\">{{ reward.name }}</h3>\n            <p class=\"pledge\">Pledge $<!-- {{ reward.pledge }}  -->or more</p>\n          </div>\n  \n          <p>{{ reward.description }}</p>\n  \n          <div class=\"box-btn\">\n            <p class=\"modal-rewards-left\">\n              <strong style=\"font-size: larger; margin-right: 5px\">\n              <!--   {{ reward.quantity }} --></strong\n              >\n              left\n            </p>\n            <div class=\"modal-rewards-bottom\" >\n              <p>Enter your pledge</p>\n              <div>\n                <div class=\"input-btn\">\n                  <p>$</p>\n                  <input type=\"text\" />\n                </div>\n                <button class=\"btn-global\">Continue</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  ","<!--* PROJECT introduction -->\n\n<img src=\"{{ project.image }}\" alt=\"\" class=\"project-header\" />\n<section>\n  <div class=\"card\">\n    <img id=\"project-logo\" src=\"{{ project.logo }}\" alt=\"\" />\n\n    <div class=\"project-intro\">\n      <h1>{{ project.name }}</h1>\n      <p>{{ project.introduction }}</p>\n    </div>\n\n    <div class=\"box-btn\" style=\"display: flex;\">\n      <button class=\"btn-global\" (click)=\"toggleAllPledge()\">Back this project</button>\n      <button id=\"bookmark\" (click)=\"toggleBookmark()\">\n\n        <svg width=\"56\" height=\"56\" xmlns=\"http://www.w3.org/2000/svg\" id=\"bookmark-icon\"  [ngClass]=\"{'rotate-bkm': bookmarked,'translate-bkm':bookmarked}\">\n          <g fill=\"none\" fill-rule=\"evenodd\">\n            <circle fill=\"#2F2F2F\" cx=\"28\" cy=\"28\" r=\"28\" [ngStyle]=\"{'fill' : bookmarked ? '#49a8a8' : 'black'}\"/>\n            <path fill=\"#B1B1B1\" d=\"M23 19v18l5-5.058L33 37V19z\" [ngStyle]=\"{'fill' : bookmarked ? 'white' : 'grey'}\"/>\n          </g>\n        </svg>\n\n        <p id=\"bookmark-text\" *ngIf=\"!isSmallScreen\" [ngClass]=\"{'bookmarked-text': bookmarked} \" [ngStyle]=\"{'margin-left': bookmarked ? '34px' : '84px'}\" >{{bookmarkText()}}</p>\n      </button>\n    </div>\n  </div>\n\n<!--*   PROJECT stats -->\n  <div class=\"card\">\n    <ul>\n      <li>\n        <div class=\"project-figure\"> {{ project.total_earned  + totalPayment | currency }} </div>\n         <p> of <span style=\"padding-right: 5px;padding-left: 5px;\">{{ project.goal  | currency}}</span> backed</p>\n      </li>\n      <li id=\"count-separation\">\n        <div class=\"project-figure\"> \n          {{ project.total_backer }}\n        </div>\n          \n        <p>total backers</p>\n      </li>\n      <li>\n        <div class=\"project-figure\">\n          56\n        </div>\n        <p>days left</p>\n      </li>\n    </ul>\n\n    <div class=\"progressBar\">\n      <div class=\"progress\" [ngStyle]=\"{'width': ((project.total_earned + totalPayment) / project.goal)*100 +'%'}\" ></div>\n    </div>\n  </div>\n\n  <div class=\"card\">\n    <div class=\"about\">\n      <h3>About this project</h3>\n      <br />\n      <p>\n        {{ project.about }}\n      </p>\n    </div>\n\n<!--*   REWARDS -->\n\n    <div class=\"rewards-box\" *ngFor=\"let reward of project.rewards\" >\n     \n      <div class=\"stand\">\n        <div class=\"pledge-box\">\n          <h3>{{ reward.name }}</h3>\n          <p class=\"pledge\">Pledge ${{ reward.pledge }} or more</p>\n        </div>\n        <p class=\"reward-description\">{{ reward.description }}</p>\n\n        <div class=\"box-btn\">\n          <p class=\"stand-left\">\n            <span class=\"left-number\"> {{ reward.quantity }}</span> left\n          </p>\n          <button class=\"btn-global\" (click)=\"onSelect(reward)\">Select Reward</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n<!--* MODAL -->\n<!-- TODO : Turn into compnent -->\n\n<div class=\"modal\" *ngIf=\"showModal\">\n  <div class=\"modal-box\">\n\n    <!--* Modal with all rewards -->\n      <div *ngIf=\"!confirmPay && allPledges\">\n        <svg width=\"15\" height=\"15\" xmlns=\"http://www.w3.org/2000/svg\" (click)=\"toggleAllPledge()\"  id=\"closeCross\"><path d=\"M11.314 0l2.828 2.828L9.9 7.071l4.243 4.243-2.828 2.828L7.07 9.9l-4.243 4.243L0 11.314 4.242 7.07 0 2.828 2.828 0l4.243 4.242L11.314 0z\" fill=\"#000\" fill-rule=\"evenodd\" opacity=\".4\"/></svg >\n          <h2 style=\"font-size:large;\"> Back this project</h2>\n          \n          <p id=\"modal-text\">\n            Want to support us in bringing Mastercraft Bamboo Monitor Riser out in the\n            world?\n          </p>\n          \n          <!-- DEFAULT PLEDGE -->\n            <div class=\"modal-rewards\" style=\"border: 1px solid lightgrey\" id=\"default-reward\" (click)=\"selectDefault()\"[ngClass]=\"{'opened-reward' : defaultPledge, 'closed-reward': !defaultPledge }\">\n              <div class=\"modal-rewards-top\">\n                <div class=\"radio\"> <div class=\"radio-select\"  *ngIf=\"defaultSelected\"></div> </div>\n                <div class=\"modal-pledge-box\" >\n                    <h3>Pledge with no rewards</h3>\n                </div>\n                <p>Choose to support us without a rewards if you simply believe in our\n                    project . As a backer, you will be signed up to receive product updates via email</p>\n              </div>\n              <div class=\"modal-rewards-bottom bottomSlide\" *ngIf=\"defaultSelected\">\n                <p><label for=\"payment\"><em>Enter your pledge</em></label></p>\n  \n                  <form (ngSubmit)=\"submit(df)\" #df=\"ngForm\">\n                    <div class=\"input-btn\">\n                     <p>\n                       <i class=\"fas fa-heart\"></i>\n                    </p> \n                       \n                      <input type=\"number\"  id=\"payment\" name=\"payment\"  placeholder=\"\" [ngModel]=\"defaultPledge\">\n                    </div>\n                    <button type=\"submit\" class=\"btn-global\" >Continue</button>\n                  </form>\n              </div>\n            </div>\n         \n          <!-- PROJECT PLEDGE -->\n          <div class=\"modal-rewards-box\" >\n\n            <div class=\"modal-rewards\" \n              (click)=\"hideShowEffect(reward)\" \n              *ngFor=\"let reward of project.rewards\"\n\n              [ngClass]=\"{'opened-reward' : reward.hide, 'closed-reward': !reward.hide }\">\n                <div class=\"modal-rewards-top\">\n                  <div class=\"radio\"> <div class=\"radio-select\"  *ngIf=\"reward.hide\"></div> </div>\n                  <div class=\"modal-pledge-box\" >\n                    <h3 style=\"margin-right: 20px\">{{ reward.name }}</h3>\n                    <p class=\"pledge\">Pledge ${{ reward.pledge }} or more</p>\n                  </div>\n                  <p>{{ reward.description }}</p>\n                  <div class=\"box-btn\">\n                    <p class=\"modal-rewards-left\">\n                      <strong style=\"font-size: larger; margin-right: 5px\">{{ reward.quantity }}</strong>left</p>\n                  </div>\n                </div>\n                    \n                <div class=\"modal-rewards-bottom bottomSlide\" *ngIf=\"reward.hide\">\n                  <p><label for=\"payment\"><em>Enter your pledge</em></label></p>\n                    <form (ngSubmit)=\"onSubmit(f,reward)\" #f=\"ngForm\">\n                      <div class=\"input-btn\">\n                        <p>$</p>\n                        <input type=\"number\"  id=\"payment\"name=\"payment\" min=\"{{reward.pledge | currency}}\" [ngModel]=\"reward.pledge\" required>\n                      </div>\n                      <button type=\"submit\" class=\"btn-global\" [disabled]=\"f.invalid\" >Continue</button>\n                    </form>\n                </div>\n            </div>\n          </div>\n      </div>\n    <!--*  Modal selected reward -->\n      <div *ngIf=\"!confirmPay && !allPledges\">\n        <svg width=\"15\" height=\"15\" xmlns=\"http://www.w3.org/2000/svg\" (click)=\"toggleModal()\"  id=\"closeCross\"><path d=\"M11.314 0l2.828 2.828L9.9 7.071l4.243 4.243-2.828 2.828L7.07 9.9l-4.243 4.243L0 11.314 4.242 7.07 0 2.828 2.828 0l4.243 4.242L11.314 0z\" fill=\"#000\" fill-rule=\"evenodd\" opacity=\".4\"/></svg >\n          <h3>Back this project</h3>\n          \n          <p id=\"modal-text\">\n            Want to support us in bringing Mastercraft Bamboo Monitor Riser out in the\n            world?\n          </p>\n          <div class=\"modal-rewards-box\" >\n            \n            <div class=\"modal-rewards\" (click)=\"togglePledge()\" [ngClass]=\"{'opened-reward' : !reward.hide}\" >\n                <div class=\"modal-rewards-top\">\n                <div class=\"modal-pledge-box\">\n                  <h3 style=\"margin-right: 20px\">{{ selectedReward.name }}</h3>\n                  <p class=\"pledge\">Pledge ${{ selectedReward.pledge }} or more</p>\n                </div>\n                \n                <p>{{ selectedReward.description }}</p>\n                \n                <div class=\"box-btn\">\n                  \n                  <p class=\"modal-rewards-left\">\n                    <strong style=\"font-size: larger; margin-right: 5px\">\n                      {{ selectedReward.quantity }}</strong>left</p>\n                    </div>\n                  </div>\n\n                <div class=\"modal-rewards-bottom\" >\n\n                  <p><em>Enter your pledge</em></p>\n                \n                    <form (ngSubmit)=\"onSubmit(f,selectedReward)\" #f=\"ngForm\">\n                      <div class=\"input-btn\">\n                        <p >$</p>\n                        <input type=\"number\"  name=\"payment\" min=\"{{ selectedReward.pledge | currency}}\" [ngModel]=\"selectedReward.pledge\" required>\n                      </div>\n                      <button type=\"submit\" class=\"btn-global\" [disabled]=\"f.invalid\" >Continue</button>\n                    </form>\n              </div>\n            </div>\n          </div>\n      </div>\n    <!--* Modal contribution sucess -->\n      <div *ngIf=\"confirmPay\" style=\"text-align: center; width: 100%;\">\n          <svg width=\"64\" height=\"64\" xmlns=\"http://www.w3.org/2000/svg\" style=\"transform: scale(1.3); margin-bottom:30px\"><g fill=\"none\" fill-rule=\"evenodd\"><circle fill=\"#3CB3AB\" cx=\"32\" cy=\"32\" r=\"32\"/><path stroke=\"#FFF\" stroke-width=\"5\" d=\"M20 31.86L28.093 40 44 24\"/></g></svg>\n          <h1 style=\"margin-bottom: 20px;\">Thanks you for suppport !</h1>\n          <p style=\"margin-bottom: 20px;\">{{project.thanks}}</p>\n          <button class=\"btn-global\" (click)=\"toggleModal()\"  >Get it !</button>\n      </div>\n  </div>\n</div>\n\n<!-- END MODAL -->\n<script>\n\n</script>","import { Component, OnInit, Input } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { IProject } from \"../projects-list/Project\";\nimport { IRewards } from \"../projects-list/Rewards\";\nimport { LayoutModule } from '@angular/cdk/layout'\n\nimport { AllProjectsService} from \"../services/all-projects.service\";\nimport { ProjectListService } from \"../services/project-list.service\";\n\n\n@Component({\n  selector: \"app-project-details\",\n  templateUrl: \"./project-details.component.html\",\n  styleUrls: [\"./project-details.component.scss\"],\n})\nexport class ProjectDetailsComponent implements OnInit {\n\n  public project: IProject = <IProject>{};\n\n/*   public selectReward:boolean; */\n  public bookmarked:boolean;\n  public selectPledge:boolean =false;\n\n  public togglePledge():void{\n  this.selectPledge = !this.selectPledge;\n  }\n\n\n/*   public selectRewards():void{\n    this.selectReward= !this.selectReward\n  } */\n  \n  public toggleBookmark(): void{\n    this.bookmarked = !this.bookmarked;\n  }\n\n  public getPerct(a,b):number{\n    return a/b ;\n  }\n\n  public reward : IRewards = <IRewards>{};\n\n  constructor(\n    private route: ActivatedRoute,\n    private projectlistservice: ProjectListService,\n    private projectService: AllProjectsService,\n    private layout: LayoutModule\n  ) {}\n\n\n @Input() achat:number; \n\n\n  public bookmarkText():string{  \n    if(this.bookmarked){\n      return 'bookmarked';\n    }else{\n      return 'bookmark';\n    }\n  }\n\n   \n  isSmallScreen: boolean;\n\n\n  ngOnInit(): void {\n  \n   const id : number = +this.route.snapshot.paramMap.get(\"id\");\n   this.project = this.projectService.projects.find((project) => project.id === id);\n\n  console.log('id :'+id);\n  console.log('project :' +this.project);\n   /* this.projectlistservice.getProjects().subscribe((projects: IProject[]) => {\n      this.project = projects.find((project) => project.id === id);\n    });\n    this.project.rewards;\n    const name:string = this.route.snapshot.paramMap.get(\"nameR\"); */\n  }\n\n  //* Modal & Modal Form\n\n  public selectedReward?: IRewards;\n  public selectedRewardo?: IRewards;\n  public confirmPay:boolean=false;\n  public showModal:boolean;\n  public allPledges:boolean;\n  public defaultSelected:boolean;\n\n\n\n  resetHide(){\n    this.project.rewards.forEach(reward => {\n      reward.hide = false ;\n    });\n    this.defaultSelected = false\n  }\n  \n\n  toggleModal():void{\n    this.showModal = !this.showModal;\n  }\n  toggleAllPledge(){\n    this.allPledges = !this.allPledges;\n    this.toggleModal();\n    this.confirmPay = false ;\n  }\n\n  succesPay(){\n    this.confirmPay=!this.confirmPay;\n  }\n\n  onSelect(reward: IRewards): void {\n     console.log(reward)\n    this.selectedReward = reward;\n    this.confirmPay = false ;\n    this.toggleModal()\n  }\n\n    \n\n  hideShowEffect(reward: IRewards): void {\n    this.resetHide();\n    reward.hide = !reward.hide;\n   this.confirmPay = false ;\n   reward= this.selectedReward;\n }\n\n selectDefault(){\n  this.resetHide();\n  this.defaultSelected = true;\n\n }\n    onSubmit(form: NgForm, reward:IRewards){\n   const pay = form.value['payment'];\n   if(pay >= reward.pledge ){\n     this.totalPayment = this.totalPayment + pay;\n     this.project.total_earned = this.project.total_earned + this.totalPayment;\n     this.succesPay();\n     reward.quantity--;\n     this.allPledges=false;\n     this.project.total_backer ++;\n    }\n  }\n    submit(form: NgForm){\n    const pay = form.value['payment'];\n    if(pay>=this.defaultPledge){\n      this.totalPayment = this.totalPayment + pay;\n           this.project.total_earned = this.project.total_earned + this.totalPayment;\n      this.succesPay();\n      this.allPledges=false;\n      this.project.total_backer ++;\n    }\n     \n   }\n   public defaultPledge : number = 0;\n  public totalPayment : number = 0 ;\n\n \n}\n","<header>\n  <nav [ngClass]=\"{'toggleMenu' : menuState}\">\n    <span id=\"logo\"> crowdfund</span>\n\n    <ul *ngIf=\"menuState\">\n      <li style=\"border-top-left-radius: 10px; border-top-right-radius: 10px;\"><a routerLink=\"/home\" routerLinkActive=\"active\"> About</a></li>\n      <li><a routerLink=\"/project\" routerLinkActive=\"active\">Discover</a></li>\n      <li  style=\"border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;\"><a routerLink=\"#\" routerLinkActive=\"active\">Get Started</a></li>\n    </ul>\n\n    <span id=\"btn-menu\" (click)=\"toggleMenu()\">\n      <svg width=\"16\" height=\"15\" xmlns=\"http://www.w3.org/2000/svg\" *ngIf=\"!menuState\" ><g fill=\"#FFF\" fill-rule=\"evenodd\"><path d=\"M0 0h16v3H0zM0 6h16v3H0zM0 12h16v3H0z\"/></g></svg>\n      <svg width=\"15\" height=\"15\" xmlns=\"http://www.w3.org/2000/svg\" *ngIf=\"menuState\" fill=\"#FFF\" ><path d=\"M11.314 0l2.828 2.828L9.9 7.071l4.243 4.243-2.828 2.828L7.07 9.9l-4.243 4.243L0 11.314 4.242 7.07 0 2.828 2.828 0l4.243 4.242L11.314 0z\" fill=\"#FFF\" fill-rule=\"evenodd\" /></svg>\n    </span>\n\n  </nav>\n</header>\n\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'Crowdfund';\n\n  menuState: boolean;\n  isSmallScreen: boolean;\n\n  toggleMenu():void{\n    this.menuState = !this.menuState ;\n  }\n\n  constructor (private layout: BreakpointObserver){}\n\n  ngOnInit(){\n    \n    if(this.layout.isMatched('(max-width: 599px)')){\n      console.log('smallScreen')\n      this.menuState=false\n\n    this.isSmallScreen = true ;\n    }else if(this.layout.isMatched('(min-width: 599px)')){\n      console.log('big screen')\n      this.isSmallScreen = false;\n      this.menuState = true ;\n    }\n    console.log(this.isSmallScreen);\n  }\n\n}\n\n\n;\n\n","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport {LayoutModule} from '@angular/cdk/layout';\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { HomeComponent } from \"./home/home.component\";\nimport { ProjectsListComponent } from \"./projects-list/projects-list.component\";\nimport { ProjectDetailsComponent } from \"./project-details/project-details.component\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RewardModalComponent } from './project-details/reward-modal/reward-modal.component';\nimport {AllProjectsService } from './services/all-projects.service';\n\nimport {MatRadioModule} from '@angular/material/radio';\n@NgModule({\n  declarations: [\n    AppComponent, \n    HomeComponent,\n    ProjectsListComponent,\n    ProjectDetailsComponent,\n    RewardModalComponent,\n \n  ],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule, FormsModule,LayoutModule, MatRadioModule],\n  providers: [AllProjectsService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { IProject } from \"../projects-list/Project\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProjectListService {\n  private readonly PROJECT_API_URL = \"api/projects.json\";\n\n  constructor(private http: HttpClient) {}\n\n  public getProjects(): Observable<IProject[]> {\n    return this.http.get<IProject[]>(this.PROJECT_API_URL).pipe(\n      tap((projects) => console.log(\"projects: \", projects)),\n      catchError(this.handleError)\n    );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error(\"An error occurred:\", error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` + `body was: ${error.error}`\n      );\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\"Something bad happened; please try again later.\");\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IProject } from '../projects-list/Project';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AllProjectsService {\n\nprojects :IProject[] = [\n\n      {\n    id: 1,\n    name: \"Mastercraft Bamboo Monitor Riser\",\n    introduction: \"A beautiful & handcrafted monitor stand to reduce neck and eye strain \",\n    total_earned: 80000,\n    logo: \"./assets/images/logo-mastercraft.svg\",\n    image: \"./assets/images/image-hero-desktop.jpg\",\n    goal: 100000,\n    total_backer: 5700,\n    project_debut: \"2021-03-05\",\n    project_end: \"2021-05-05\",\n    thanks:\"Your pledge bring us one step closer to sharing Mastercraft Bamboo Monitor Riser worldwide . You will get an email once our campaign is completed\",\n    about: \"The Mastercraft Bamboo Monitor Riser is a sturdy and stylish\\nplatform that elevates your screen to a more comfortable viewing\\nheight. Placing your monitor at eye level has the potential to\\nimprove your posture and make you more comfortable while at work,\\nhelping you stay focused on the task at hand . \\n\\n Featuring artisan craftmanship, the simplicity of design creates extra desk space below your computer to allows notepads, pens, and USB sticks to be stored under the stand.\",\n    rewards: [\n      { \n        name: \"Bamboo\",\n        pledge: 25,\n        quantity: 101,\n        description: \" You get an ergonomic stand made of natural bamboo. You've helped us\\nlaunch our promotional campaign, and you’ll be added to a special\\nBacker member list.\",\n        hide:false\n      },\n      {\n        name: \"Black Edition Stand\",\n        pledge: 75,\n        quantity: 64,\n        description: \"You get a Black Special Edition computer stand and a personal thank\",\n        hide:false\n      },\n      {\n        name: \"Mahogany Special Edition \",\n        pledge: 200,\n        quantity: 100,\n        description: \"   You get two Special Edition Mahogany stands, a Backer T-Shirt, and a personal thank you. You’ll be added to our Backer member list. Shipping is included.\",\n        hide:false\n      }\n    ]\n  }\n]\n  constructor() { }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { HomeComponent } from \"./home/home.component\";\nimport { ProjectDetailsComponent } from \"./project-details/project-details.component\";\nimport { ProjectsListComponent } from \"./projects-list/projects-list.component\";\nimport { RewardModalComponent } from \"./project-details/reward-modal/reward-modal.component\";\n\nconst routes: Routes = [\n  { path: \"home\", component: HomeComponent },\n  { path: \"project\", component: ProjectsListComponent },\n  { path: \"project/:id\", component: ProjectDetailsComponent },\n  { path: \"about\", component: ProjectsListComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}